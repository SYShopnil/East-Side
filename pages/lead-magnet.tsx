// External Imports
import Head from 'next/head';
import dynamic from 'next/dynamic';
import { redirectTo500page } from '@src/utils/strapi';
import client from '@root/apollo-client';
import { getFooterInfo, getGlobalInfo } from '@src/query/pages-data';
import { PageBySlug } from '@src/query';
import { ILayoutProps } from '@src/types/__layout';
import { IContext, ILeadMagnet } from '@src/types/pages';
import { BlockNames } from '@src/components/blockManager/blocks';
import Loading from '@src/components/root/loading';
import { IPageProps } from '@src/types/pages/about';

const LeadMagnetPage = dynamic<ILeadMagnet>(
  import('@src/components/pages/lead-magnet').then(
    (module) => module.LeadMagnetPage
  ),
  { loading: () => <Loading /> }
);
const Layout = dynamic<ILayoutProps>(
  import('@src/components/__layout').then((module) => module.Layout),
  { loading: () => <Loading /> }
);
const ContactUs = ({
  pageInfo,
  globalInfo,
  footerInfo,
  preview,
}: IPageProps) => {
  let heroBlock, formBlock, doubleColumnBlock;
  const blockLength = pageInfo.block.length;
  for (let i = 0; i < blockLength; i++) {
    let block = pageInfo.block[i];
    switch (block.__typename) {
      case BlockNames.HERO_PRIMARY:
        heroBlock = block;
        break;
      case BlockNames.FORM:
        formBlock = block;
        break;
      case BlockNames.DOUBLE_COLUMN_TEXT:
        doubleColumnBlock = block;
        break;
    }
  }

  return (
    <>
      <Head>
        <title>EastSide | Lead Magnet</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="robots" content="noindex,nofollow" />
        <meta name="googlebot" content="noindex" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout globalInfo={globalInfo} footerInfo={footerInfo} preview={preview}>
        <LeadMagnetPage
          heroData={heroBlock}
          formData={formBlock}
          doubleColumnTextData={doubleColumnBlock}
        />
      </Layout>
    </>
  );
};
export async function getStaticProps(context: IContext) {
  let { locale } = context;
  let pageInfo, globalInfo, footerInfo;
  if (!locale) locale = 'en';
  try {
    /* Page Data Fetch */
    const { data: pageData } = await client.query({
      query: PageBySlug('lead-magnet', locale),
    });
    if (pageData.pages.data.length) {
      pageInfo = pageData.pages.data[0].attributes;
    } else {
      return redirectTo500page();
    }

    /* Global Info Fetch */
    globalInfo = await getGlobalInfo(locale, client);
    /* Footer Info Fetch */
    footerInfo = await getFooterInfo(locale, client);
    if (!globalInfo || !footerInfo) return redirectTo500page();
    return {
      props: {
        pageInfo,
        globalInfo,
        footerInfo,
        preview: context.preview || false,
      },
      revalidate: context.preview ? 1 : 120,
    };
  } catch (error) {
    return redirectTo500page();
  }
}
export default ContactUs;
